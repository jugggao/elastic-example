# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
cluster.name: {{ elasticsearch_cluster_config.cluster_name }}
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
node.name: {{ role }}
#
# Add custom attributes to the node:
#
node.attr.rack: r1
{% if role == 'coordinate' %}
#
node.data: false
{% else %}
#
node.data: true
{% endif %}
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
path.data: {{ elasticsearch_paths_config.data_path }}
#
# Path to log files:
#
path.logs: {{ elasticsearch_paths_config.logs_path }}
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
#bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
network.host: {{ ansible_facts[ network_interface ]['ipv4']['address'] }}
#
# Set a custom port for HTTP:
#
http.port: {{ elasticsearch_network_config.http_port }}
#
# For more information, consult the network module documentation.
#
transport.port: {{ elasticsearch_network_config.transport_port }}
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when this node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#


discovery.seed_hosts: [{% for host in groups['elastic'] %}
    {%- if loop.index != 1 and loop.index < (groups['elastic'] | length) -%}, {% endif -%}
    {%- if hostvars[host]['role'] != "coordinate" -%}
    "{{ host }}:{{ elasticsearch_network_config.transport_port }}"
    {%- endif -%}
{%- endfor -%}]
#
# Bootstrap the cluster using an initial set of master-eligible nodes:
#
cluster.initial_master_nodes: [{% for host in groups['elastic'] %}
    {%- if loop.index != 1 and loop.index < (groups['elastic'] | length) -%}, {% endif -%}
    {%- if hostvars[host]['role'] != "coordinate" -%}
    "{{ hostvars[host]['role'] }}"
    {%- endif -%}
{%- endfor -%}]

#
# For more information, consult the discovery and cluster formation module documentation.
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
gateway.recover_after_nodes: {{ (groups['elastic'] | length) - 2 }}
#
# For more information, consult the gateway module documentation.
#
# ---------------------------------- Various -----------------------------------
#
# Require explicit names when deleting indices:
#
#action.destructive_requires_name: true
